language: python
services:
  - docker

env:
  - ANSIBLE_VERSION: "2.2.3"
  - ANSIBLE_VERSION: "2.3.2"
  - ANSIBLE_VERSION: "2.4.2"
  - distribution: Ubuntu
    distribution_version: xenial
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    ANSIBLE_VERSION: docker
  - distribution: Ubuntu
    distribution_version: trusty
    init: /sbin/init
    run_opts: ""
    ANSIBLE_VERSION: docker
  - distribution: EL
    distribution_version: "7"
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    ANSIBLE_VERSION: docker
  - distribution: Debian
    distribution_version: jessie
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    ANSIBLE_VERSION: docker

before_install:
  # Standard Local Testing Commands
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then sudo apt-get -y install software-properties-common ; fi
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then sudo apt-get -y install python-pip ; fi
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then sudo pip install ansible==$ANSIBLE_VERSION ; fi
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then ansible --version ; fi
  # Docker Testing pull container.
  - if [ "${ANSIBLE_VERSION}" == "docker" ]; then docker pull ansiblecheck/ansiblecheck:${distribution,,}-${distribution_version} ; fi


script:
  # Local Testing Commands
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then echo localhost > inventory ; fi
  - if [ "${ANSIBLE_VERSION}" != "docker" ]; then ansible-playbook -i inventory --connection=local --sudo -v test/main.yml ; fi

  # Docker Testing Commands
  - if [ "${ANSIBLE_VERSION}" == "docker" ]; then container_id=$(mktemp) ; fi
  # Start The Built Container In The Background
  - if [ "${ANSIBLE_VERSION}" == "docker" ]; then docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ansiblecheck/ansiblecheck:"${distribution,,}"-"${distribution_version}" "${init}" > "${container_id}" ; fi
  # Ansible syntax check.
  - if [ "${ANSIBLE_VERSION}" == "docker" ]; then docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/test/main.yml --syntax-check ; fi
  # Test role.
  - if [ "${ANSIBLE_VERSION}" == "docker" ]; then docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/test/main.yml -v ; fi

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
